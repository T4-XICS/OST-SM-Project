#version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - icsnet
    volumes:
      - zookeeper_data:/bitnami

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    networks:
      - icsnet
    volumes:
      - kafka_data:/bitnami

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    environment:
      - INFLUXDB_INIT_MODE=setup
      - INFLUXDB_INIT_USERNAME=admin
      - INFLUXDB_INIT_PASSWORD=adminpass
      - INFLUXDB_INIT_ORG=ics-org
      - INFLUXDB_INIT_BUCKET=ics
      - INFLUXDB_INIT_ADMIN_TOKEN=admintoken123
    ports:
      - "8086:8086"
    networks:
      - icsnet
    volumes:
      - influxdb_data:/var/lib/influxdb2

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      # make Grafana load provisioning files
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - icsnet
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - icsnet

networks:
  icsnet:
    driver: bridge

volumes:
  zookeeper_data:
  kafka_data:
  influxdb_data:
  grafana_data:
  prometheus_data:
